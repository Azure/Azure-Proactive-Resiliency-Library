// Azure Resource Graph Query
// Find traffic manager profiles that do not have endpoints in two different regions
resources
| where type == "microsoft.network/trafficmanagerprofiles"
| mv-expand properties.endpoints
| extend ipaddress = tostring(properties_endpoints.properties.target)
| extend targetLocation = iff(isnotnull(properties_endpoints.properties.endpointLocation),tostring(properties_endpoints.properties.endpointLocation),"")  //native azure service endpoint usecase
| join kind=leftouter(resources   // ipaddress usecase
    | where isnotempty(properties.ipAddress)
    | extend ipaddress = tostring(properties.ipAddress)
    | extend targetLocation = tostring(location)
    | project name, targetLocation, ipaddress) on ipaddress
| join kind=leftouter(resources    // nic usecase
    | where type =~ 'microsoft.network/networkinterfaces'
    | mv-expand properties.ipConfigurations
    | extend ipaddress = tostring(properties_ipConfigurations.properties.privateIPAddress)
    | extend targetLocation = tostring(location)
    | project name, targetLocation, ipaddress) on ipaddress
| join kind=leftouter(resources  // firewall endpoint usecase, private ips
    | where type =~ 'microsoft.network/azurefirewalls'
    | extend ipaddress = tostring(properties.hubIPAddresses.privateIPAddress)
    | extend targetLocation = tostring(location)
    | project name, targetLocation, ipaddress) on ipaddress
| join kind=leftouter(resources  // firewall endpoint usecase, public ips
    | where type =~ 'microsoft.network/azurefirewalls'
    | extend ipaddress = tostring(properties.hubIPAddresses.publicIPs.addresses[0].address)
    | extend targetLocation = tostring(location)
    | project name, targetLocation, ipaddress) on ipaddress
| extend endpointLocation = iif(isnotempty(targetLocation), targetLocation, iif(isnotempty(targetLocation1), targetLocation1, iif(isnotempty(targetLocation2), targetLocation2, iif(isnotempty(targetLocation3), targetLocation3, iff(isnotempty(targetLocation4), targetLocation4, "")))))
| summarize endpointLocations = make_set(endpointLocation) by id, name, location, tostring(tags)
| where array_length(endpointLocations) < 2 
| project recommendationId = "traf-3", name, id, location, tags, param1 = strcat('endpointLocations: ', endpointLocations)
